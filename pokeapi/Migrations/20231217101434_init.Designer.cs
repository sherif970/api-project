// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pokeapi.models;

#nullable disable

namespace pokeapi.Migrations
{
    [DbContext(typeof(context))]
    [Migration("20231217101434_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("categorypokemon", b =>
                {
                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<int>("pokemonsid")
                        .HasColumnType("int");

                    b.HasKey("categoryid", "pokemonsid");

                    b.HasIndex("pokemonsid");

                    b.ToTable("categorypokemon");
                });

            modelBuilder.Entity("ownerpokemon", b =>
                {
                    b.Property<int>("ownerid")
                        .HasColumnType("int");

                    b.Property<int>("pokemonsid")
                        .HasColumnType("int");

                    b.HasKey("ownerid", "pokemonsid");

                    b.HasIndex("pokemonsid");

                    b.ToTable("ownerpokemon");
                });

            modelBuilder.Entity("pokeapi.models.category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("pokeapi.models.country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("country");
                });

            modelBuilder.Entity("pokeapi.models.owner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("countryid")
                        .HasColumnType("int");

                    b.Property<string>("gym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("countryid");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("pokeapi.models.pokemon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("pokemons");
                });

            modelBuilder.Entity("pokeapi.models.review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("pokemonid")
                        .HasColumnType("int");

                    b.Property<int>("reviewerid")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("pokemonid");

                    b.HasIndex("reviewerid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("pokeapi.models.reviewer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("reviewers");
                });

            modelBuilder.Entity("categorypokemon", b =>
                {
                    b.HasOne("pokeapi.models.category", null)
                        .WithMany()
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokeapi.models.pokemon", null)
                        .WithMany()
                        .HasForeignKey("pokemonsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ownerpokemon", b =>
                {
                    b.HasOne("pokeapi.models.owner", null)
                        .WithMany()
                        .HasForeignKey("ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokeapi.models.pokemon", null)
                        .WithMany()
                        .HasForeignKey("pokemonsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pokeapi.models.owner", b =>
                {
                    b.HasOne("pokeapi.models.country", "country")
                        .WithMany("owner")
                        .HasForeignKey("countryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("pokeapi.models.review", b =>
                {
                    b.HasOne("pokeapi.models.pokemon", "pokemon")
                        .WithMany("review")
                        .HasForeignKey("pokemonid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokeapi.models.reviewer", "reviewer")
                        .WithMany("review")
                        .HasForeignKey("reviewerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pokemon");

                    b.Navigation("reviewer");
                });

            modelBuilder.Entity("pokeapi.models.country", b =>
                {
                    b.Navigation("owner");
                });

            modelBuilder.Entity("pokeapi.models.pokemon", b =>
                {
                    b.Navigation("review");
                });

            modelBuilder.Entity("pokeapi.models.reviewer", b =>
                {
                    b.Navigation("review");
                });
#pragma warning restore 612, 618
        }
    }
}
